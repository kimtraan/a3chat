[{"/Users/kimtran/Documents/HCDE438/a3chat/src/index.js":"1","/Users/kimtran/Documents/HCDE438/a3chat/src/App.js":"2","/Users/kimtran/Documents/HCDE438/a3chat/src/TextInput.js":"3","/Users/kimtran/Documents/HCDE438/a3chat/src/Message.js":"4"},{"size":219,"mtime":1642803037969,"results":"5","hashOfConfig":"6"},{"size":1029,"mtime":1643418406500,"results":"7","hashOfConfig":"6"},{"size":768,"mtime":1643414666997,"results":"8","hashOfConfig":"6"},{"size":161,"mtime":1643151588225,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"19ysbu9",{"filePath":"13","messages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"12"},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"/Users/kimtran/Documents/HCDE438/a3chat/src/index.js",[],["21","22"],"/Users/kimtran/Documents/HCDE438/a3chat/src/App.js",["23","24"],"import \"./App.css\";\nimport TextInput from \"./TextInput.js\";\nimport {useState} from 'react';\nimport Message from \"./Message\";\nimport ChatBubble from 'react-chat-bubble';\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n  function sendMessage(text) {\n    const newMessage = {\n      text,\n      time: Date.now(),\n      user: \"Kim\",\n    };\n    setMessages([newMessage, ...messages]);\n  }\n  console.log(messages);\n\n  return (\n    <div className=\"App\">\n      <header className=\"header\">\n      <style>\n        /*imports poppins font from google*/\n        @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap');\n      </style>\n        <div className=\"logo\" />\n        <span className=\"title\">Chipchat</span>\n      </header>\n\n      <div className=\"messages\">\n        {messages.map((msg) => {\n          return <Message {...msg} />;\n        })}\n      </div>\n      {/* <ChatBubble messages = {...msg} */}\n      <TextInput sendMessage={sendMessage} />\n    </div>\n  );\n}\n\nexport default App;","/Users/kimtran/Documents/HCDE438/a3chat/src/TextInput.js",["25","26"],"import React from \"react\";\nimport \"./TextInput.css\";\nimport {useState} from \"react\";\n\nfunction TextInput(props) {\n    const [text, setText] = useState(\"\");\n  \n    function send() {\n      props.sendMessage(text);\n      setText(\"\");\n    }\n    function onKeyPress(e) {\n      if (e.key === \"Enter\") {\n        send();\n      }\n    }\n  \n\n    return (\n        <footer className = \"footer\">\n            <input className=\"text-input\" placeholder =\"write a message...\" value={text}\n            value = {text}\n            onChange = {(e) => setText(e.target.value)}\n            onKeyPress = {onKeyPress}\n           />\n            <button className=\"send\" onClick = {send}><img src = \"Arrow.png\"></img>\n            </button> \n        </footer>\n    );\n}\n\nexport default TextInput;\n\n","/Users/kimtran/Documents/HCDE438/a3chat/src/Message.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":5,"column":8,"nodeType":"33","messageId":"34","endLine":5,"endColumn":18},{"ruleId":"35","severity":1,"message":"36","line":22,"column":14,"nodeType":"37","messageId":"38","endLine":25,"endColumn":7},{"ruleId":"39","severity":1,"message":"40","line":22,"column":13,"nodeType":"41","messageId":"42","endLine":22,"endColumn":27},{"ruleId":"43","severity":1,"message":"44","line":26,"column":55,"nodeType":"45","endLine":26,"endColumn":78},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-unused-vars","'ChatBubble' is defined but never used.","Identifier","unusedVar","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","JSXText","putCommentInBraces","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]